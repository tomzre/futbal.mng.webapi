// <auto-generated />
using System;
using Futbal.Mng.Infrastructure.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Futbal.Mng.Infrastructure.Migrations
{
    [DbContext(typeof(FutbalMngContext))]
    [Migration("20190714232922_AddUserGameToDbContext")]
    partial class AddUserGameToDbContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Futbal.Mng.Domain.Event.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<DateTime>("GameDate");

                    b.Property<string>("Name");

                    b.Property<Guid?>("OwnerId");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("games");
                });

            modelBuilder.Entity("Futbal.Mng.Domain.Event.UserGame", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<Guid>("GameId");

                    b.HasKey("UserId", "GameId");

                    b.HasIndex("GameId");

                    b.ToTable("UserGame");
                });

            modelBuilder.Entity("Futbal.Mng.Domain.UserManagement.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Email");

                    b.Property<string>("Password");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Futbal.Mng.Domain.Event.Game", b =>
                {
                    b.HasOne("Futbal.Mng.Domain.UserManagement.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId");

                    b.OwnsOne("Futbal.Mng.Domain.ValueObjects.Address", "Place", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<Guid>("GameId");

                            b1.Property<int>("Number");

                            b1.Property<string>("Street");

                            b1.HasKey("Id");

                            b1.HasIndex("GameId")
                                .IsUnique();

                            b1.ToTable("address");

                            b1.HasOne("Futbal.Mng.Domain.Event.Game")
                                .WithOne("Place")
                                .HasForeignKey("Futbal.Mng.Domain.ValueObjects.Address", "GameId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Futbal.Mng.Domain.Event.UserGame", b =>
                {
                    b.HasOne("Futbal.Mng.Domain.Event.Game", "Game")
                        .WithMany("Attendees")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Futbal.Mng.Domain.UserManagement.User", "User")
                        .WithMany("Games")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
